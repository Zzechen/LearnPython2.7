ASCII:
只有127个字母被编码到计算机里，也就是大小写英文字母、数字和一些符号,并占有一个字节

Unicode：
各国对各自语言有不同的标准，在多语言的混合文本中，显示会有乱码；Unicode把所有语言都统一到一套编码里，通常用2个字节表示一个字符（如果
要用到非常偏僻的字符，需要4个字符）。现代操作系统和大多数编程语言都直接支持Unicode。

UTF-8：
Unicode编码比ASCII编码需要多一倍的存储空间，把Unicode编码转化为“可变长编码”的UTF-8编码，UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节

字符	ASCII	         Unicode	          UTF-8
A	    01000001	00000000 01000001	     01000001
中	      x	        01001110 00101101	11100100 10111000 10101101

Python字符串
1. 因为Python诞生早于Unicode标准的发布，所以最早Python只支持ASCII编码，并提供字母和数字转换
ord('A') --> 65
chr(65) --> 'A'

2. 后续添加了对Unicode的支持，以Unicode表示的字符串用u'...'表示如：
print u'中文' ---> 中文

3. 编码转换
u'ABC'.encode('utf-8') ---> 'ABC'
u'中文'.encode('utf-8') --> '\xe4\xb8\xad\xe6\x96\x87'

note:英文字符转换后表示的UTF-8的值和Unicode值相等（但占用的存储空间不同），而中文字符转换后1个Unicode字符将变为3个UTF-8字符

4. 代码中包含中文时
由于Python源代码也是一个文本文件，所以，当代码中有中文时，保存源代码时需要指定保存为UTF-8编码，当Python解释器读取文件时，要让它按
UTF-8编码读取，在文件开头这样写：
#!/usr/bin/env python  告诉Liunx/Os X系统，这是一个Python可执行系统，Windows会忽略这个注释
# -*- coding: utf-8 -*-





